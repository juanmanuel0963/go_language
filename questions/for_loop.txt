What are the looping constructs in Go?
-------------------------------------
- Go has only one looping construct: the for loop.
- The for loop has 3 components separated by semicolons:

- The Init statement, which is executed before the loop begins. 
  - Itâ€™s often a variable declaration only visible within the scope of the for loop.
  - i := 0
- The condition expression, which is evaluated as a Boolean before each iteration to determine if the loop should continue.
  - i < 10
- The post statement, which is executed at the end of each iteration.
  - i++

package main
import "fmt"
func main() {
    sum := 0
    for i := 0; i < 10; i++ {
        sum += i
    } 
    fmt.Println(sum)
}

Is there a foreach construct in the Go language?
------------------------------------------------
- A for statement with a range clause iterates through all entries of an array, slice, string or map, or values received on a channel. 
- For each entry it assigns iteration values to corresponding iteration variables and then executes the block.
